/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  query BLOCK_HASH_QUERY($offset: BlockOffset) {\n    block(offset: $offset) {\n      height\n      hash\n    }\n  }": typeof types.BlockHashQueryDocument,
    "\n  query TX_ID_QUERY($offset: TransactionOffset!) {\n    transactions(offset: $offset) {\n      raw\n      hash\n      unshieldedCreatedOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      unshieldedSpentOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      block {\n        height\n        hash\n      }\n      transactionResult {\n        status\n        segments {\n          id\n          success\n        }\n      }\n    }\n  }": typeof types.TxIdQueryDocument,
    "\n  query DEPLOY_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractUpdate {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n\t          raw\n            hash\n            identifiers\n            contractActions {\n              address\n            }\n            block {\n              height\n              hash\n            }\n            transactionResult {\n              status\n              segments {\n                id\n                success\n              }\n            }\n            unshieldedCreatedOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n            unshieldedSpentOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n          }\n        }\n      }\n    }\n  }": typeof types.DeployTxQueryDocument,
    "\n  query DEPLOY_CONTRACT_STATE_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        state\n      }\n      ... on ContractUpdate {\n        state\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n            contractActions {\n              address\n              state\n            }\n          }\n        }\n      }\n    }\n  }": typeof types.DeployContractStateTxQueryDocument,
    "\n  query LATEST_CONTRACT_TX_BLOCK_HEIGHT_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      transaction {\n        block {\n          height\n        }\n      }\n    }\n  }": typeof types.LatestContractTxBlockHeightQueryDocument,
    "\n  subscription TXS_FROM_BLOCK_SUB($offset: BlockOffset) {\n    blocks(offset: $offset) {\n      hash,\n      height,\n      transactions {\n        hash\n        identifiers\n        contractActions {\n          state\n          address\n        }\n      }\n    }\n  }": typeof types.TxsFromBlockSubDocument,
    "\n  query CONTRACT_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n    }\n  }": typeof types.ContractStateQueryDocument,
    "\n  subscription CONTRACT_STATE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      state\n    }\n  }": typeof types.ContractStateSubDocument,
    "\n  query BOTH_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n      chainState\n    }\n  }": typeof types.BothStateQueryDocument,
    "\n  query UNSHIELDED_BALANCE_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }": typeof types.UnshieldedBalanceQueryDocument,
    "\n  subscription UNSHIELDED_BALANCE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }": typeof types.UnshieldedBalanceSubDocument,
};
const documents: Documents = {
    "\n  query BLOCK_HASH_QUERY($offset: BlockOffset) {\n    block(offset: $offset) {\n      height\n      hash\n    }\n  }": types.BlockHashQueryDocument,
    "\n  query TX_ID_QUERY($offset: TransactionOffset!) {\n    transactions(offset: $offset) {\n      raw\n      hash\n      unshieldedCreatedOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      unshieldedSpentOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      block {\n        height\n        hash\n      }\n      transactionResult {\n        status\n        segments {\n          id\n          success\n        }\n      }\n    }\n  }": types.TxIdQueryDocument,
    "\n  query DEPLOY_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractUpdate {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n\t          raw\n            hash\n            identifiers\n            contractActions {\n              address\n            }\n            block {\n              height\n              hash\n            }\n            transactionResult {\n              status\n              segments {\n                id\n                success\n              }\n            }\n            unshieldedCreatedOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n            unshieldedSpentOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n          }\n        }\n      }\n    }\n  }": types.DeployTxQueryDocument,
    "\n  query DEPLOY_CONTRACT_STATE_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        state\n      }\n      ... on ContractUpdate {\n        state\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n            contractActions {\n              address\n              state\n            }\n          }\n        }\n      }\n    }\n  }": types.DeployContractStateTxQueryDocument,
    "\n  query LATEST_CONTRACT_TX_BLOCK_HEIGHT_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      transaction {\n        block {\n          height\n        }\n      }\n    }\n  }": types.LatestContractTxBlockHeightQueryDocument,
    "\n  subscription TXS_FROM_BLOCK_SUB($offset: BlockOffset) {\n    blocks(offset: $offset) {\n      hash,\n      height,\n      transactions {\n        hash\n        identifiers\n        contractActions {\n          state\n          address\n        }\n      }\n    }\n  }": types.TxsFromBlockSubDocument,
    "\n  query CONTRACT_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n    }\n  }": types.ContractStateQueryDocument,
    "\n  subscription CONTRACT_STATE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      state\n    }\n  }": types.ContractStateSubDocument,
    "\n  query BOTH_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n      chainState\n    }\n  }": types.BothStateQueryDocument,
    "\n  query UNSHIELDED_BALANCE_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }": types.UnshieldedBalanceQueryDocument,
    "\n  subscription UNSHIELDED_BALANCE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }": types.UnshieldedBalanceSubDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query BLOCK_HASH_QUERY($offset: BlockOffset) {\n    block(offset: $offset) {\n      height\n      hash\n    }\n  }"): (typeof documents)["\n  query BLOCK_HASH_QUERY($offset: BlockOffset) {\n    block(offset: $offset) {\n      height\n      hash\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query TX_ID_QUERY($offset: TransactionOffset!) {\n    transactions(offset: $offset) {\n      raw\n      hash\n      unshieldedCreatedOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      unshieldedSpentOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      block {\n        height\n        hash\n      }\n      transactionResult {\n        status\n        segments {\n          id\n          success\n        }\n      }\n    }\n  }"): (typeof documents)["\n  query TX_ID_QUERY($offset: TransactionOffset!) {\n    transactions(offset: $offset) {\n      raw\n      hash\n      unshieldedCreatedOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      unshieldedSpentOutputs {\n        owner\n        intentHash\n        tokenType\n        value\n      }\n      block {\n        height\n        hash\n      }\n      transactionResult {\n        status\n        segments {\n          id\n          success\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query DEPLOY_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractUpdate {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n\t          raw\n            hash\n            identifiers\n            contractActions {\n              address\n            }\n            block {\n              height\n              hash\n            }\n            transactionResult {\n              status\n              segments {\n                id\n                success\n              }\n            }\n            unshieldedCreatedOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n            unshieldedSpentOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n          }\n        }\n      }\n    }\n  }"): (typeof documents)["\n  query DEPLOY_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractUpdate {\n        transaction {\n\t        raw\n          hash\n          identifiers\n          contractActions {\n            address\n          }\n          block {\n            height\n            hash\n          }\n          transactionResult {\n            status\n            segments {\n              id\n              success\n            }\n          }\n          unshieldedCreatedOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n          unshieldedSpentOutputs {\n            owner\n            intentHash\n            tokenType\n            value\n          }\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n\t          raw\n            hash\n            identifiers\n            contractActions {\n              address\n            }\n            block {\n              height\n              hash\n            }\n            transactionResult {\n              status\n              segments {\n                id\n                success\n              }\n            }\n            unshieldedCreatedOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n            unshieldedSpentOutputs {\n              owner\n              intentHash\n              tokenType\n              value\n            }\n          }\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query DEPLOY_CONTRACT_STATE_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        state\n      }\n      ... on ContractUpdate {\n        state\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n            contractActions {\n              address\n              state\n            }\n          }\n        }\n      }\n    }\n  }"): (typeof documents)["\n  query DEPLOY_CONTRACT_STATE_TX_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        state\n      }\n      ... on ContractUpdate {\n        state\n      }\n      ... on ContractCall {\n        deploy {\n          transaction {\n            contractActions {\n              address\n              state\n            }\n          }\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query LATEST_CONTRACT_TX_BLOCK_HEIGHT_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      transaction {\n        block {\n          height\n        }\n      }\n    }\n  }"): (typeof documents)["\n  query LATEST_CONTRACT_TX_BLOCK_HEIGHT_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      transaction {\n        block {\n          height\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription TXS_FROM_BLOCK_SUB($offset: BlockOffset) {\n    blocks(offset: $offset) {\n      hash,\n      height,\n      transactions {\n        hash\n        identifiers\n        contractActions {\n          state\n          address\n        }\n      }\n    }\n  }"): (typeof documents)["\n  subscription TXS_FROM_BLOCK_SUB($offset: BlockOffset) {\n    blocks(offset: $offset) {\n      hash,\n      height,\n      transactions {\n        hash\n        identifiers\n        contractActions {\n          state\n          address\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query CONTRACT_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n    }\n  }"): (typeof documents)["\n  query CONTRACT_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription CONTRACT_STATE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      state\n    }\n  }"): (typeof documents)["\n  subscription CONTRACT_STATE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      state\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query BOTH_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n      chainState\n    }\n  }"): (typeof documents)["\n  query BOTH_STATE_QUERY($address: HexEncoded!, $offset: ContractActionOffset) {\n    contractAction(address: $address, offset: $offset) {\n      state\n      chainState\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  query UNSHIELDED_BALANCE_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }"): (typeof documents)["\n  query UNSHIELDED_BALANCE_QUERY($address: HexEncoded!) {\n    contractAction(address: $address) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }"];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n  subscription UNSHIELDED_BALANCE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }"): (typeof documents)["\n  subscription UNSHIELDED_BALANCE_SUB($address: HexEncoded!, $offset: BlockOffset) {\n    contractActions(address: $address, offset: $offset) {\n      ... on ContractDeploy {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractUpdate {\n        unshieldedBalances {\n          tokenType\n          amount\n        }\n      }\n      ... on ContractCall {\n        deploy {\n          unshieldedBalances {\n            tokenType\n            amount\n          }\n        }\n      }\n    }\n  }"];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;