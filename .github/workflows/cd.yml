name: CD - Release

on:
  push:
    tags: ['v*']

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  cd-release:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444  # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build:core

      - name: Run tests
        run: yarn test

      - name: Extract release notes
        id: release_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Extract release notes from CHANGELOG.md for this version
          awk "/^## .*$VERSION/,/^## /{if(/^## .*$VERSION/) found=1; else if(/^## / && found) exit; if(found && !/^## .*$VERSION/) print}" CHANGELOG.md > release_notes.md

          # If no release notes found, use commit messages since last tag
          if [ ! -s release_notes.md ]; then
            echo "### Changes" > release_notes.md
            git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md
          fi

      - name: Determine Build Targets
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          filters: |
            midnight-js: 'packages/**'

      - name: Publish packages
        if: steps.changes.outputs.midnight-js == 'true'
        run: |
          rm docs/image/deployment-diagram.png || true
          rm docs/image/call-tx-build-sequence-diagram.png || true
          yarn deploy --filter="./packages/*" --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Create GitHub Release
        if: steps.changes.outputs.midnight-js == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_notes.outputs.version }}
          release_name: Release ${{ steps.release_notes.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
