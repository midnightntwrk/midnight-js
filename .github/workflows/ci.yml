name: CI
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}
 
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "30 4 * * *"

permissions:
  contents: read
  issues: read
  id-token: write
  packages: write
  checks: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      build_workflows: ${{ steps.build-targets.outputs.workflows }}
      build_mn_js: ${{ steps.build-targets.outputs.midnight-js }}
      build_c_js: ${{ steps.build-targets.outputs.compact-js }}
      build_p_js: ${{ steps.build-targets.outputs.platform-js }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Determine Build Targets
        uses: dorny/paths-filter@v3
        id: build-targets
        with:
          filters: |
            workflows: '.github/workflows/**'
            compact-js: 'compact-js/**'
            platform-js: 'platform-js/**'
            midnight-js: 'packages/**' 

  ci-mnjs:
    needs: ci
    name: Build Midnight.js
    uses: ./.github/workflows/ci_mn_js.yml
    with:
      should_run: ${{ needs.ci.outputs.build_mn_js }} || ${{ needs.ci.outputs.build_workflows }}
      should_prerelease: ${{ 
          github.event_name != 'schedule' &&
          (github.ref_name == 'main' || contains(github.event.head_commit.message, '[do_publish]') || github.event_name == 'workflow_dispatch')
        }}
    secrets: inherit

  ci-cjs:
    needs: ci
    name: Build Compact.js
    with:
      should_run: ${{ needs.ci.outputs.build_c_js }} || ${{ needs.ci.outputs.build_workflows }}
      should_prerelease: ${{ 
          github.event_name != 'schedule' &&
          (github.ref_name == 'main' || contains(github.event.head_commit.message, '[do_publish]') || github.event_name == 'workflow_dispatch')
        }}
    uses: ./.github/workflows/ci_c_js.yml
    secrets: inherit

  ci-pjs:
    needs: ci
    name: Build Platform.js
    with:
      should_run: ${{ needs.ci.outputs.build_p_js }} || ${{ needs.ci.outputs.build_workflows }}
      should_prerelease: ${{ 
          github.event_name != 'schedule' &&
          (github.ref_name == 'main' || contains(github.event.head_commit.message, '[do_publish]') || github.event_name == 'workflow_dispatch')
        }}
    uses: ./.github/workflows/ci_p_js.yml
    secrets: inherit
