name: CI
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}
 
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "30 4 * * *"

permissions:
  contents: read
  issues: read
  id-token: write
  packages: write
  checks: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      build_mn_js: ${{ steps.build-targets.outputs.build_mn_js }}
      build_c_js: ${{ steps.build-targets.outputs.build_c_js }}
      build_p_js: ${{ steps.build-targets.outputs.build_p_js }}
      do_publish: ${{ steps.build-targets.outputs.do_publish }}
    steps:

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Determine Build Targets
        id: build-targets
        run: |
          build_mn_js=$(yarn workspaces list --since --json | jq -s '([.[] | select(.location != ".") | .location | split("/")[0]] | unique) | index("packages") != null')
          build_c_js=$(yarn workspaces list --since --json | jq -s '([.[] | select(.location != ".") | .location | split("/")[0]] | unique) | index("compact-js") != null')
          build_p_js=$(yarn workspaces list --since --json | jq -s '([.[] | select(.location != ".") | .location | split("/")[0]] | unique) | index("platform-js") != null')
          do_publish=$([[ $(git log -1 --no-merges --pretty=%B) =~ .*'\[do_publish\]'.* ]] && echo 'true' || echo 'false')
          
          echo "build_mn_js=${build_mn_js}" >> "$GITHUB_OUTPUT"
          echo "build_c_js=${build_c_js}" >> "$GITHUB_OUTPUT"
          echo "build_p_js=${build_p_js}" >> "$GITHUB_OUTPUT"
          echo "do_publish=${do_publish}" >> "$GITHUB_OUTPUT"

          echo "### Build Target Summary" >> $GITHUB_STEP_SUMMARY
          echo "The following table summarizes which targets have changes detected in them and that will be included in the build." >> $GITHUB_STEP_SUMMARY
          echo "| Target      | Changed        |" >> $GITHUB_STEP_SUMMARY
          echo "| ----------- | -------------- |" >> $GITHUB_STEP_SUMMARY
          echo "| Platform.js | ${build_p_js}  |" >> $GITHUB_STEP_SUMMARY
          echo "| Midnight.js | ${build_mn_js} |" >> $GITHUB_STEP_SUMMARY
          echo "| Compact.js  | ${build_c_js}  |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          [[ '$do_publish' = 'true' ]] && echo "Pre-release packages will be published." >> $GITHUB_STEP_SUMMARY || echo "Pre-release packages will not be published." >> $GITHUB_STEP_SUMMARY

  ci-mnjs:
    needs: ci
    name: Build Midnight.js
    uses: ./.github/workflows/ci_mn_js.yml
    with:
      should_run: ${{ needs.ci.outputs.build_mn_js }}
      should_prerelease: ${{ 
        github.event_name != 'schedule' &&
        (github.ref_name == 'main' || needs.ci.outputs.do_publish == 'true' || github.event_name == 'workflow_dispatch')
      }}
    secrets: inherit

  ci-cjs:
    needs: ci
    name: Build Compact.js
    with:
      should_run: ${{ needs.ci.outputs.build_c_js }}
      should_prerelease: ${{ 
        github.event_name != 'schedule' &&
        (github.ref_name == 'main' || needs.ci.outputs.do_publish == 'true' || github.event_name == 'workflow_dispatch')
      }}
    uses: ./.github/workflows/ci_c_js.yml
    secrets: inherit

  ci-pjs:
    needs: ci
    name: Build Platform.js
    with:
      should_run: ${{ needs.ci.outputs.build_p_js }}
      should_prerelease: ${{ 
        github.event_name != 'schedule' &&
        (github.ref_name == 'main' || needs.ci.outputs.do_publish == 'true' || github.event_name == 'workflow_dispatch')
      }}
    uses: ./.github/workflows/ci_p_js.yml
    secrets: inherit
