name: CI
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "30 4 * * *"

permissions:
  contents: read
  issues: read
  id-token: write
  packages: write
  checks: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  ci:
    uses: ./.github/workflows/ci_base.yml
    with:
      network: undeployed
      allure_upload: true
      allure_project_id: midnight-js-main
    secrets: inherit

  cd-prerelease:
    runs-on: ubuntu-latest
    needs: ci
    if: ${{ github.event_name != 'schedule' && github.ref_name == 'main' || contains(github.event.head_commit.message, '[do_publish]') || github.event_name == 'workflow_dispatch' }}
    steps:

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Temp bump prerelease
        run: yarn version prerelease

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          currentVersion=$(jq -r .version package.json)
          targetVersion="$currentVersion-pre.$calculatedSha"
          echo "target_version=$targetVersion" >> $GITHUB_OUTPUT

      - name: Bump versions
        run: yarn workspaces foreach --all version ${{ steps.vars.outputs.target_version }}

      - name: Publish packages
        run: yarn deploy --cache-dir ./turbo -- --tag ${{ steps.vars.outputs.target_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}
