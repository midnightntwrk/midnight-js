name: Continuous Integration
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      build_timeout:
        required: false
        type: number
        default: 30
      network:
        type: string
        description: Midnight network to use (testnet/devnet/undeployed)
        required: true
        default: 'undeployed'
      yarn_install:
        type: string
        description: Install phase command line
        required: false
        default: 'yarn install --immutable'
      yarn_filter:
        type: string
        description: Optional filter to include when running Yarn (i.e., --filter=...)
        required: false
        default: ''
      yarn_lint_paths:
        type: string
        description: Optional paths to include when running 'yarn lint'' (i.e., ./packages)
        required: false
        default: ''
      allure_upload:
        type: boolean
        description: Should upload e2e tests results to allure server
        required: false
        default: false
      allure_project_id:
        type: string
        description: Allure project id
        required: false
        default: midnight-js-main

jobs:
  ci:
    name: Build, Lint and Unit/Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Log in to GitHub Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # ratchet:docker/login-action@v3
        with:
          registry: 'https://ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: |
          ${{ inputs.yarn_install }}

      - name: Run build
        run: yarn build ${{ inputs.yarn_filter }} --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Run linter
        if: ${{ inputs.yarn_lint_paths != '' }}
        run: yarn lint -- ${{ inputs.yarn_lint_paths }}

      - name: Run tests
        run: |
          yarn test ${{ inputs.yarn_filter }} --concurrency 1 --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Integration tests
        if: ${{ !contains(github.event.head_commit.message, '[skip_it]') }}
        run: |
          yarn it ${{ inputs.yarn_filter }} --concurrency 1 --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Aggregate coverage reports
        run: |
          npx --yes istanbul-merge --out coverage.json $(find . -type f -name 'coverage-final.json' | sort -u | tr '\n' ' ')
          npx --yes istanbul report --include coverage.json --dir coverage html

      - name: Merge report as ZIP
        run: |
          #ArtiomTr/jest-coverage-report-action@v2 has a bug, this is temp solution
          mv coverage coverage_$(date +"%Y%m%d%H%M%S")
          zip -r coverage.zip coverage*

      - name: Upload Artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # ratchet:actions/upload-artifact@v4
        with:
          name: Coverage Report
          path: coverage.zip

      - name: Publish Test Coverage
        uses: MishaKav/jest-coverage-comment@aa3935cf9ee61efc40d9e47dcc8a523a49a70b96 # ratchet:MishaKav/jest-coverage-comment@v1
        with:
          hide-comment: false
          unique-id-for-comment: 'midnightjs-coverage'
          multiple-files: |
            contracts, ./packages/contracts/coverage/coverage-summary.json
            fetch-zk-config-provider, ./packages/fetch-zk-config-provider/coverage/coverage-summary.json
            http-client-proof-provider, ./packages/http-client-proof-provider/coverage/coverage-summary.json
            indexer-public-data-provider, ./packages/indexer-public-data-provider/coverage/coverage-summary.json
            level-private-state-provider, ./packages/level-private-state-provider/coverage/coverage-summary.json
            logger-provider, ./packages/logger-provider/coverage/coverage-summary.json
            node-zk-config-provider, ./packages/node-zk-config-provider/coverage/coverage-summary.json
            utils, ./packages/utils/coverage/coverage-summary.json

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # ratchet:mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          check_name: 'Unit Test Results (MidnightJS)'
          report_paths: |
            **/test-report*.xml

      - name: Publish Test Summary Comment
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # ratchet:EnricoMi/publish-unit-test-result-action@v2.20.0
        if: success() || failure()
        with:
          check_name: 'Unit Test Results - MidnightJS'
          files: |
            **/test-report*.xml

      - name: Upload dist for it
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # ratchet:actions/upload-artifact@v4
        with:
          name: midnight-js-dist
          path: packages/*/dist/

  docs_api:
    name: Generate API Documentation
    runs-on: ubuntu-latest
    needs: ci
    timeout-minutes: 15
    steps:

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # ratchet:actions/checkout@v5

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Log in to GitHub Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # ratchet:docker/login-action@v3
        with:
          registry: 'https://ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Download build
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # ratchet:actions/download-artifact@v4
        with:
          name: midnight-js-dist
          path: packages/

      - name: Generate documentation
        run: yarn run build:markdown-docs
