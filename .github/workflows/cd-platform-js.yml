name: CD - Release Platform.js
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
  
on:
  workflow_dispatch:

jobs:
  cd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done
          export $(grep -v '^#' .github/env/global_c_js.env | xargs)
          for var in $(cut -d= -f1 .github/env/global_c_js.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn & npm
        run: |
          yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Determine Version
        id: vars
        run: |
          on_release_branch=$(jq --arg b "$(git rev-parse --abbrev-ref HEAD)" '(.v_info.releaseBranches | join("|")) as $p | ($b | test("^(" + $p + ")$"))' version.platformjs.json)
          
          source_commit=$(git log --format=%h -1 -- version.platformjs.json)
          commit_height=$(($(git log --format=%h $source_commit.. | wc -l)))
          version=$(jq -r '.v_info.version' version.platformjs.json)
          preRelease=$(jq -r '.v_info.preRelease' version.platformjs.json)
          tag=$(jq -r '.v_info.tag' version.platformjs.json)
          target_version="$version$preRelease.$commit_height"

          echo "target_version=${target_version}" >> "$GITHUB_OUTPUT"
          echo "tag=${tag}" >> "$GITHUB_OUTPUT"
          echo "on_release_branch=${on_release_branch}" >> "$GITHUB_OUTPUT"

      - name: Determine Build Targets
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: changes
        with:
          filters: |
            vinfo: 'version.platformjs.json'
            platform-js: 'platform-js/**' 

      - name: Bump versions
        if: ${{
            steps.vars.outputs.on_release_branch == 'true' &&
            (steps.changes.outputs.platform-js == 'true' || steps.changes.outputs.vinfo == 'true')
          }}
        run: yarn workspaces foreach -R --from "./platform-js/*" --exclude "./compact-js/*" --exclude "./packages/*" version ${{ steps.vars.outputs.target_version }}

      - name: Publish packages
        if: ${{
            steps.vars.outputs.on_release_branch == 'true' &&
            (steps.changes.outputs.platform-js == 'true' || steps.changes.outputs.vinfo == 'true')
          }}
        run: yarn deploy --filter="./platform-js/*" --cache-dir ./turbo -- --tag ${{ steps.vars.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set build instance version number
        if: ${{
            steps.vars.outputs.on_release_branch == 'true' &&
            (steps.changes.outputs.platform-js == 'true' || steps.changes.outputs.vinfo == 'true')
          }}
        run: echo "id=${{ steps.vars.outputs.target_version }}" >> "$GITHUB_OUTPUT"
