name: CI - Compact.js
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      should_run:
        required: true
        type: string
      yarn_install:
        type: string
        description: Install phase command line
        required: false
        default: 'yarn install --immutable'
      yarn_filter:
        type: string
        description: Optional filter to include when running Yarn (i.e., --filter=...)
        required: false
        default: '--filter="./compact-js/*"'
      yarn_lint_paths:
        type: string
        description: Optional paths to include when running 'yarn lint'' (i.e., ./packages)
        required: false
        default: './compact-js'

concurrency:
  group: C-JS-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Log in to GitHub Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # ratchet:docker/login-action@v3
        with:
          registry: 'https://ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set up Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: |
          ${{ inputs.yarn_install }}

      - name: Run build
        run: yarn build ${{ inputs.yarn_filter }} --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Run linter
        run: yarn lint -- ${{ inputs.yarn_lint_paths }}

      - name: Run tests
        run: |
          yarn test ${{ inputs.yarn_filter }} --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Aggregate coverage reports
        run: |
          npx --yes istanbul-merge --out coverage.json $(find . -type f -name 'coverage-final.json' | sort -u | tr '\n' ' ')
          npx --yes istanbul report --include coverage.json --dir coverage html

      - name: Merge report as ZIP
        run: |
          #ArtiomTr/jest-coverage-report-action@v2 has a bug, this is temp solution
          mv coverage coverage_$(date +"%Y%m%d%H%M%S")
          zip -r coverage.zip coverage*

      - name: Upload Artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # ratchet:actions/upload-artifact@v4
        with:
          name: Coverage Report
          path: coverage.zip

      - name: Publish Test Coverage
        uses: MishaKav/jest-coverage-comment@d74238813c33e6ea20530ff91b5ea37953d11c91 # ratchet:MishaKav/jest-coverage-comment@v1
        with:
          hide-comment: false
          multiple-files: |
            compact-js, ./compact-js/compact-js/coverage/coverage-summary.json
