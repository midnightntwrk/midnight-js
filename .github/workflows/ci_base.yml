name: Continuous Integration
env:
  MIDNIGHTCI_PACKAGES_WRITE: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      build_timeout:
        required: false
        type: number
        default: 30
      network:
        type: string
        description: Midnight network to use (testnet/devnet/undeployed)
        required: true
        default: 'undeployed'
      yarn_install:
        type: string
        description: Install phase command line
        required: false
        default: 'yarn install --immutable'
      yarn_it:
        type: string
        description: E2E tests command line
        required: false
        default: 'yarn e2e-groups --concurrency 1 --cache-dir ./turbo'
      allure_upload:
        type: boolean
        description: Should upload e2e tests results to allure server
        required: false
        default: false
      allure_project_id:
        type: string
        description: Allure project id
        required: false
        default: midnight-js-main

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Log in to GitHub Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # ratchet:docker/login-action@v3
        with:
          registry: 'https://ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set up Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: |
          ${{ inputs.yarn_install }}

      - name: Run build
        run: yarn build --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Run linter
        run: yarn lint

      - name: Run tests
        run: |
          yarn test --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Run integration tests
        run: |
          yarn it --cache-dir ./turbo
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Aggregate coverage reports
        run: |
          npx --yes istanbul-merge --out coverage.json $(find . -type f -name 'coverage-final.json' | sort -u | tr '\n' ' ')
          npx --yes istanbul report --include coverage.json --dir coverage html

      - name: Merge report as ZIP
        run: |
          #ArtiomTr/jest-coverage-report-action@v2 has a bug, this is temp solution
          mv coverage coverage_$(date +"%Y%m%d%H%M%S")
          zip -r coverage.zip coverage*

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        with:
          name: Coverage Report
          path: coverage.zip

      - name: Publish Test Coverage
        uses: MishaKav/jest-coverage-comment@d74238813c33e6ea20530ff91b5ea37953d11c91 # ratchet:MishaKav/jest-coverage-comment@v1
        with:
          hide-comment: false
          multiple-files: |
            contracts, ./packages/contracts/coverage/coverage-summary.json
            fetch-zk-config-provider, ./packages/fetch-zk-config-provider/coverage/coverage-summary.json
            http-client-proof-provider, ./packages/http-client-proof-provider/coverage/coverage-summary.json
            level-private-state-provider, ./packages/level-private-state-provider/coverage/coverage-summary.json
            node-zk-config-provider, ./packages/node-zk-config-provider/coverage/coverage-summary.json
            testing, ./packages/testing/coverage/coverage-summary.json
            utils, ./packages/utils/coverage/coverage-summary.json
            logger-provider, ./packages/logger-provider/coverage/coverage-summary.json

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@992d97d6eb2e5f3de985fbf9df6a04386874114d # ratchet:mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          check_name: 'Unit Test Results'
          report_paths: '**/test-report*.xml'

      - name: Publish Test Summary Comment
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # ratchet:EnricoMi/publish-unit-test-result-action@v2.18.0
        if: success() || failure()
        with:
          check_name: 'Unit Test Results'
          files: |
            **/test-report*.xml

      - name: Upload dist for it
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        with:
          name: e2e-tests-dist
          path: packages/*/dist/

      - name: Upload compiled contracts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        with:
          name: e2e-tests-contracts
          path: packages/testing/src/e2e/contract/managed

  e2e_tests:
    runs-on: ubuntu-latest-8-core-x64
    needs: ci
    timeout-minutes: ${{ inputs.build_timeout }}
    strategy:
      fail-fast: false
      matrix:
        group: [group1, group2, group3, group4, group5, group6, group7]
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Load environment variables
        run: |
          export $(grep -v '^#' .github/env/global.env | xargs)
          for var in $(cut -d= -f1 .github/env/global.env); do
            echo "$var=${!var}" >> $GITHUB_ENV
          done

      - name: Log in to GitHub Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # ratchet:docker/login-action@v3
        with:
          registry: 'https://ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Set up Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # ratchet:actions/setup-node@v4
        with:
          always-auth: true
          registry-url: https://npm.pkg.github.com/
          scope: '@midnight-ntwrk'
          node-version-file: '.nvmrc'
          cache: 'yarn'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Configure yarn
        run: yarn config set 'npmScopes.midnight-ntwrk.npmAuthToken' ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}

      - name: Cache Turbo and Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.yarn
            .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/turbo.json') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Download build
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # ratchet:actions/download-artifact@v4
        with:
          name: e2e-tests-dist
          path: packages/

      - name: Download contracts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # ratchet:actions/download-artifact@v4
        with:
          name: e2e-tests-contracts
          path: packages/testing/src/e2e/contract/managed

      - name: Run e2e tests - Group ${{ matrix.group }}
        if: ${{ !contains(github.event.head_commit.message, '[skip_it]') }}
        run: ${{ inputs.yarn_it }}
        env:
          GITHUB_TOKEN: ${{ secrets.MIDNIGHTCI_PACKAGES_WRITE }}
          MN_TEST_ENVIRONMENT: ${{ inputs.network }}
          MN_TEST_GROUP: ${{ matrix.group }}

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.group }}
          path: packages/testing/reports/

  e2e_tests_reports:
    runs-on: ubuntu-latest
    needs: e2e_tests
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Download Test Results
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # ratchet:actions/download-artifact@v4
        with:
          pattern: test-results-group*
          path: test-results

      - name: Publish Test Summary Results
        if: always()
        run: |
          mkdir ctrf-results
          mv test-results/test-results-*/ctrf-*.json ctrf-results/
          npx merge-ctrf ctrf-results --output ./ctrf-report-merged.json
          npx github-actions-ctrf ctrf-results/ctrf-report-merged.json --title "E2E test results"
          npx github-actions-ctrf pull-request ctrf-results/ctrf-report-merged.json --title "E2E test results"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ctrf-summary
          path: ctrf-results

      - name: Publish Test Summary Results
        if: always()
        run: |
          mkdir junit-results
          mv test-results/test-results-*/*.xml junit-results/
          npm install -g junit-report-merger
          jrm junit-test-results.xml junit-results/*.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # ratchet:actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-junit-summary
          path: junit-test-results.xml

      - name: Send Results to Allure Server
        uses: robkatona/send-allure-results@935714d2ab2c0de7b15a9d3e29a0cffe0fa64c59 # ratchet:robkatona/send-allure-results@v1.0.5
        if: ${{ inputs.allure_upload && always() }}
        with:
          allure-server-url: https://allure-server.prd.midnight.tools
          allure-results-directory: test-results/**/allure-results-*
          project-id: ${{ inputs.allure_project_id }}
          security-user: ${{ secrets.ALLURE_ADMIN_USER }}
          security-pass: ${{ secrets.ALLURE_ADMIN_PASSWORD }}
